[project]
name = "cache_simulator"
dynamic = ["version"]
description = "A simulator for processor caches"
license = "MIT"
authors = [{ name = "Pavel Kravchenya", email = "kpdphys@example.com" }]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  "numpy",
  "torch",
  "PyYAML",
  "dvc",
  "python-dotenv",
  "deepspeed",
  "mlflow",
  "dagshub",
]

[tool.poetry]
version = "0.0.0"

[tool.poetry.group.special]
optional = true

[tool.poetry.group.special.dependencies]
causal-conv1d = "*"
mamba-ssm = "*"
mpi4py = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "*"
mypy = "*"
pytest = "*"
pytest-mock = "*"
python-semantic-release = "*"
bandit = "*"
pre-commit = "*"
detect-secrets = "*"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["cache_simulator"]
force_sort_within_sections = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.semantic_release]
version_source = "pyproject.toml"
tag_format = "v{version}"
branch = "main"
changelog_file = "CHANGELOG.md"

[tool.semantic_release.commit_parser_options]
allowed_types = ["feat", "fix", "chore", "ci"]

[tool.mypy]
python_version = "3.13"
files = ["cache_simulator", "tests"]
strict = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_any_unimported = true
warn_return_any = true
warn_unused_ignores = true

[tool.bandit]
exclude_dirs = ["tests"]
